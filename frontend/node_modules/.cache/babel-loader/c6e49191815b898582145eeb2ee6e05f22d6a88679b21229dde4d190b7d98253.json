{"ast":null,"code":"var _jsxFileName = \"D:\\\\MSCIT_PROJECT\\\\phishing-detector-frontend\\\\src\\\\components\\\\Results.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResultsCard({\n  result\n}) {\n  const header = result === null || result === void 0 ? void 0 : result.header;\n  const body = result === null || result === void 0 ? void 0 : result.result;\n  if (!body) return null;\n\n  // Extract individual values\n  const {\n    classification,\n    is_phishing,\n    score,\n    ...modules\n  } = body;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white shadow-lg rounded-xl p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold text-indigo-700 mb-2\",\n      children: [\"Verdict: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-gray-900 uppercase\",\n        children: classification\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-600 mb-2\",\n      children: [\"Phishing: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: is_phishing ? \"Yes\" : \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-600 mb-4\",\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), header && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-xs text-gray-400 mb-4\",\n      children: [\"Request ID: \", header.request_id, \" | Time: \", new Date(header.timestamp).toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = ResultsCard;\nvar _c;\n$RefreshReg$(_c, \"ResultsCard\");","map":{"version":3,"names":["ResultsCard","result","header","body","classification","is_phishing","score","modules","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","request_id","Date","timestamp","toLocaleString","_c","$RefreshReg$"],"sources":["D:/MSCIT_PROJECT/phishing-detector-frontend/src/components/Results.js"],"sourcesContent":["export default function ResultsCard({ result }) {\r\n  const header = result?.header;\r\n  const body = result?.result;\r\n\r\n  if (!body) return null;\r\n\r\n  // Extract individual values\r\n  const { classification, is_phishing, score, ...modules } = body;\r\n\r\n  return (\r\n    <div className=\"bg-white shadow-lg rounded-xl p-6\">\r\n      <h2 className=\"text-xl font-semibold text-indigo-700 mb-2\">\r\n        Verdict: <span className=\"text-gray-900 uppercase\">{classification}</span>\r\n      </h2>\r\n      <p className=\"text-gray-600 mb-2\">Phishing: <strong>{is_phishing ? \"Yes\" : \"No\"}</strong></p>\r\n      <p className=\"text-gray-600 mb-4\">Score: {score}</p>\r\n\r\n      {header && (\r\n        <p className=\"text-xs text-gray-400 mb-4\">\r\n          Request ID: {header.request_id} | Time: {new Date(header.timestamp).toLocaleString()}\r\n        </p>\r\n      )}\r\n\r\n      {/* <div className=\"space-y-2\">\r\n        {Object.entries(modules).map(([key, value]) => (\r\n          <div key={key} className=\"border p-3 rounded-lg bg-gray-50\">\r\n            <strong className=\"capitalize\">{key.replace('_', ' ')}:</strong>\r\n            <pre className=\"whitespace-pre-wrap text-sm text-gray-700\">\r\n              {value ? JSON.stringify(value, null, 2) : \"N/A\"}\r\n            </pre>\r\n          </div>\r\n        ))}\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,eAAe,SAASA,WAAWA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAC9C,MAAMC,MAAM,GAAGD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,MAAM;EAC7B,MAAMC,IAAI,GAAGF,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEA,MAAM;EAE3B,IAAI,CAACE,IAAI,EAAE,OAAO,IAAI;;EAEtB;EACA,MAAM;IAAEC,cAAc;IAAEC,WAAW;IAAEC,KAAK;IAAE,GAAGC;EAAQ,CAAC,GAAGJ,IAAI;EAE/D,oBACEK,OAAA;IAAKC,SAAS,EAAC,mCAAmC;IAAAC,QAAA,gBAChDF,OAAA;MAAIC,SAAS,EAAC,4CAA4C;MAAAC,QAAA,GAAC,WAChD,eAAAF,OAAA;QAAMC,SAAS,EAAC,yBAAyB;QAAAC,QAAA,EAAEN;MAAc;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxE,CAAC,eACLN,OAAA;MAAGC,SAAS,EAAC,oBAAoB;MAAAC,QAAA,GAAC,YAAU,eAAAF,OAAA;QAAAE,QAAA,EAASL,WAAW,GAAG,KAAK,GAAG;MAAI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC7FN,OAAA;MAAGC,SAAS,EAAC,oBAAoB;MAAAC,QAAA,GAAC,SAAO,EAACJ,KAAK;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEnDZ,MAAM,iBACLM,OAAA;MAAGC,SAAS,EAAC,4BAA4B;MAAAC,QAAA,GAAC,cAC5B,EAACR,MAAM,CAACa,UAAU,EAAC,WAAS,EAAC,IAAIC,IAAI,CAACd,MAAM,CAACe,SAAS,CAAC,CAACC,cAAc,CAAC,CAAC;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnF,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAYE,CAAC;AAEV;AAACK,EAAA,GAnCuBnB,WAAW;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}