{"ast":null,"code":"var _jsxFileName = \"D:\\\\MSCIT_PROJECT\\\\phishing-detector-frontend\\\\src\\\\components\\\\InputForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputForm = ({\n  onSubmit\n}) => {\n  _s();\n  const [emailText, setEmailText] = useState('');\n  const [senderEmail, setSenderEmail] = useState('');\n  const [urls, setUrls] = useState('');\n  const [webContent, setWebContent] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    const payload = {\n      email_text: emailText || null,\n      sender_email: senderEmail || null,\n      urls: urls ? urls.split(',').map(url => url.trim()) : null,\n      web_content: webContent || null\n    };\n    onSubmit(payload);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Email Text\",\n      value: emailText,\n      onChange: e => setEmailText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Sender Email\",\n      value: senderEmail,\n      onChange: e => setSenderEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"URLs (comma separated)\",\n      value: urls,\n      onChange: e => setUrls(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Web Content (HTML)\",\n      value: webContent,\n      onChange: e => setWebContent(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Analyze\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(InputForm, \"wMuMbxyqBi7J3SLSO+V4pDMez9s=\");\n_c = InputForm;\nexport default InputForm;\nvar _c;\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","InputForm","onSubmit","_s","emailText","setEmailText","senderEmail","setSenderEmail","urls","setUrls","webContent","setWebContent","handleSubmit","e","preventDefault","payload","email_text","sender_email","split","map","url","trim","web_content","children","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["D:/MSCIT_PROJECT/phishing-detector-frontend/src/components/InputForm.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nconst InputForm = ({ onSubmit }) => {\r\n  const [emailText, setEmailText] = useState('');\r\n  const [senderEmail, setSenderEmail] = useState('');\r\n  const [urls, setUrls] = useState('');\r\n  const [webContent, setWebContent] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const payload = {\r\n      email_text: emailText || null,\r\n      sender_email: senderEmail || null,\r\n      urls: urls ? urls.split(',').map(url => url.trim()) : null,\r\n      web_content: webContent || null\r\n    };\r\n    onSubmit(payload);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <textarea placeholder=\"Email Text\" value={emailText} onChange={e => setEmailText(e.target.value)} />\r\n      <input type=\"text\" placeholder=\"Sender Email\" value={senderEmail} onChange={e => setSenderEmail(e.target.value)} />\r\n      <input type=\"text\" placeholder=\"URLs (comma separated)\" value={urls} onChange={e => setUrls(e.target.value)} />\r\n      <textarea placeholder=\"Web Content (HTML)\" value={webContent} onChange={e => setWebContent(e.target.value)} />\r\n      <button type=\"submit\">Analyze</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default InputForm;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMc,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,OAAO,GAAG;MACdC,UAAU,EAAEZ,SAAS,IAAI,IAAI;MAC7Ba,YAAY,EAAEX,WAAW,IAAI,IAAI;MACjCE,IAAI,EAAEA,IAAI,GAAGA,IAAI,CAACU,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI;MAC1DC,WAAW,EAAEZ,UAAU,IAAI;IAC7B,CAAC;IACDR,QAAQ,CAACa,OAAO,CAAC;EACnB,CAAC;EAED,oBACEf,OAAA;IAAME,QAAQ,EAAEU,YAAa;IAAAW,QAAA,gBAC3BvB,OAAA;MAAUwB,WAAW,EAAC,YAAY;MAACC,KAAK,EAAErB,SAAU;MAACsB,QAAQ,EAAEb,CAAC,IAAIR,YAAY,CAACQ,CAAC,CAACc,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpG/B,OAAA;MAAOgC,IAAI,EAAC,MAAM;MAACR,WAAW,EAAC,cAAc;MAACC,KAAK,EAAEnB,WAAY;MAACoB,QAAQ,EAAEb,CAAC,IAAIN,cAAc,CAACM,CAAC,CAACc,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnH/B,OAAA;MAAOgC,IAAI,EAAC,MAAM;MAACR,WAAW,EAAC,wBAAwB;MAACC,KAAK,EAAEjB,IAAK;MAACkB,QAAQ,EAAEb,CAAC,IAAIJ,OAAO,CAACI,CAAC,CAACc,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/G/B,OAAA;MAAUwB,WAAW,EAAC,oBAAoB;MAACC,KAAK,EAAEf,UAAW;MAACgB,QAAQ,EAAEb,CAAC,IAAIF,aAAa,CAACE,CAAC,CAACc,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9G/B,OAAA;MAAQgC,IAAI,EAAC,QAAQ;MAAAT,QAAA,EAAC;IAAO;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEX,CAAC;AAAC5B,EAAA,CA1BIF,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AA4Bf,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}